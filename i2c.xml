<blocks app="Snap4Arduino 1.2
 http://snap4arduino.org" version="1"><block-definition s="write i2c data %&apos;lst&apos; to register %&apos;reg&apos; at address %&apos;address&apos;" type="command" category="arduino"><header></header><code></code><inputs><input type="%mult%s"></input><input type="%s"></input><input type="%s"></input></inputs><script><block s="doDeclareVariables"><list><l>byte list</l></list></block><block s="doSetVar"><l>byte list</l><block s="reportNewList"><list></list></block></block><block s="doForEach"><l>each</l><block var="lst"/><script><block s="doIfElse"><block s="reportIsA"><block var="each"/><l><option>text</option></l></block><script><block s="doAddToList"><block s="reportUnicode"><block var="each"/></block><block var="byte list"/></block></script><script><block s="doAddToList"><block var="each"/><block var="byte list"/></block></script></block></script></block><block s="doRun"><block s="reportJSFunction"><list><l>address</l><l>bytes</l><l>reg</l></list><l>if (!this.arduino.board.i2cEnabled) {&#xD;  this.arduino.board.i2cConfig();&#xD;  this.arduino.board.i2cEnabled = true;&#xD;}&#xD;&#xD;this.arduino.board.i2cWrite(address, reg, bytes.asArray());</l></block><list><block var="address"/><block var="byte list"/><block var="reg"/></list></block></script></block-definition><block-definition s="send i2c command %&apos;lst&apos; to address %&apos;address&apos;" type="command" category="arduino"><header></header><code></code><inputs><input type="%mult%s"></input><input type="%txt"></input></inputs><script><block s="doDeclareVariables"><list><l>byte list</l></list></block><block s="doSetVar"><l>byte list</l><block s="reportNewList"><list></list></block></block><block s="doForEach"><l>each</l><block var="lst"/><script><block s="doIfElse"><block s="reportIsA"><block var="each"/><l><option>text</option></l></block><script><block s="doAddToList"><block s="reportUnicode"><block var="each"/></block><block var="byte list"/></block></script><script><block s="doAddToList"><block var="each"/><block var="byte list"/></block></script></block></script></block><block s="doRun"><block s="reportJSFunction"><list><l>address</l><l>bytes</l></list><l>if (!this.arduino.board.i2cEnabled) {&#xD;  this.arduino.board.i2cConfig();&#xD;  this.arduino.board.i2cEnabled = true;&#xD;}&#xD;&#xD;this.arduino.board.i2cWrite(address, bytes.asArray());</l></block><list><block var="address"/><block var="byte list"/></list></block></script></block-definition><block-definition s="read i2c register %&apos;reg&apos; from address %&apos;address&apos;" type="reporter" category="arduino"><header></header><code></code><inputs><input type="%s"></input><input type="%s"></input></inputs><script><block s="doRun"><block s="reportJSFunction"><list><l>address</l><l>reg</l></list><l>var myself = this;&#xD;&#xD;if (!this.arduino.board.i2cEnabled) {&#xD;  this.arduino.board.i2cConfig();&#xD;  this.arduino.board.i2cEnabled = true;&#xD;}&#xD;&#xD;this.arduino.board.i2cReadOnce(&#xD;  Number(address),&#xD;  Number(reg),&#xD;  function (response) {&#xD;    myself.response = response;&#xD;  });&#xD;</l></block><list><block var="address"/><block var="reg"/></list></block><block s="doWaitUntil"><block s="evaluate"><block s="reportJSFunction"><list></list><l>return this.response !== undefined;</l></block><list></list></block></block><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list></list><l>return new List(this.response);</l></block><list></list></block></block></script></block-definition></blocks>